# StatefulSet for MongoDB
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: mongodb
          image: mongo:4.2
          ports:
            - containerPort: 27017
              name: mongodb
          resources:
            requests:
              cpu: 5m
              memory: 75Mi
            limits:
              cpu: 25m
              memory: 1024Mi
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.runCommand('ping').ok
            initialDelaySeconds: 5
            periodSeconds: 5
---
# Service to expose MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
    - port: 27017
  selector:
    app: mongodb
  type: ClusterIP
---
# StatefulSet for RabbitMQ
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
              name: rabbitmq-amqp
            - containerPort: 15672
              name: rabbitmq-http
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "username"
            - name: RABBITMQ_DEFAULT_PASS
              value: "password"
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: rabbitmq-enabled-plugins
              mountPath: /etc/rabbitmq/enabled_plugins
              subPath: enabled_plugins
      volumes:
        - name: rabbitmq-enabled-plugins
          configMap:
            name: rabbitmq-enabled-plugins
            items:
              - key: rabbitmq_enabled_plugins
                path: enabled_plugins
---
# Service for RabbitMQ
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - name: rabbitmq-amqp
      port: 5672
      targetPort: 5672
    - name: rabbitmq-http
      port: 15672
      targetPort: 15672
  type: ClusterIP
---
# Deployment for Order Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-bestbuy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service-bestbuy
  template:
    metadata:
      labels:
        app: order-service-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: order-service-bestbuy
          image: serpild/order-service:latest  # Update image to your custom image
          ports:
            - containerPort: 3000
          env:
            - name: ORDER_QUEUE_HOSTNAME
              value: "rabbitmq"
            - name: ORDER_QUEUE_PORT
              value: "5672"
            - name: ORDER_QUEUE_USERNAME
              value: "username"
            - name: ORDER_QUEUE_PASSWORD
              value: "password"
            - name: ORDER_QUEUE_NAME
              value: "orders"
            - name: FASTIFY_ADDRESS
              value: "0.0.0.0"
          resources:
            requests:
              cpu: 1m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 256Mi
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;",
            ]
          resources:
            requests:
              cpu: 1m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 256Mi
---
# Service for Order Service
apiVersion: v1
kind: Service
metadata:
  name: order-service-bestbuy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: order-service-bestbuy
---
# Deployment for Makeline Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: makeline-service-bestbuy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: makeline-service-bestbuy
  template:
    metadata:
      labels:
        app: makeline-service-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: makeline-service-bestbuy
          image: serpild/makeline-service:latest  # Update image to your custom image
          ports:
            - containerPort: 3001
          env:
            - name: ORDER_QUEUE_URI
              value: "amqp://rabbitmq:5672"
            - name: ORDER_QUEUE_USERNAME
              value: "username"
            - name: ORDER_QUEUE_PASSWORD
              value: "password"
            - name: ORDER_QUEUE_NAME
              value: "orders"
            - name: ORDER_DB_URI
              value: "mongodb://mongodb:27017"
            - name: ORDER_DB_NAME
              value: "orderdb"
            - name: ORDER_DB_COLLECTION_NAME
              value: "orders"
          resources:
            requests:
              cpu: 1m
              memory: 6Mi
            limits:
              cpu: 5m
              memory: 20Mi
          startupProbe:
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Makeline Service
apiVersion: v1
kind: Service
metadata:
  name: makeline-service-bestbuy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3001
      targetPort: 3001
  selector:
    app: makeline-service-bestbuy
---
# Deployment for Product Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-bestbuy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service-bestbuy
  template:
    metadata:
      labels:
        app: product-service-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: product-service-bestbuy
          image: serpild/product-service:latest  # Update image to your custom image
          ports:
            - containerPort: 3002
          env:
            - name: AI_SERVICE_URL
              value: "http://ai-service:5001/"
          resources:
            requests:
              cpu: 1m
              memory: 1Mi
            limits:
              cpu: 2m
              memory: 20Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 3002
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3002
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Product Service
apiVersion: v1
kind: Service
metadata:
  name: product-service-bestbuy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3002
      targetPort:
# Service for Store Front
apiVersion: v1
kind: Service
metadata:
  name: store-front
spec:
  ports:
    - port: 80 # Service port exposed outside the cluster
      targetPort: 8080 # Target container port
  selector:
    app: store-front
  type: LoadBalancer # Expose service externally via load balancer
---
# Deployment for Store Admin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-admin
  template:
    metadata:
      labels:
        app: store-admin
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: store-admin
          image: serpild/store-admin:latest # Admin interface for store
          ports:
            - containerPort: 8081 # Admin app port
              name: store-admin
          env: # Environment variables for backend URLs
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: "http://product-service:3002/"
            - name: VUE_APP_MAKELINE_SERVICE_URL
              value: "http://makeline-service:3001/"
          resources: # Resource requests and limits
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe: # Initial health check
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Store Admin
apiVersion: v1
kind: Service
metadata:
  name: store-admin
spec:
  ports:
    - port: 80 # Service port exposed outside the cluster
      targetPort: 8081
  selector:
    app: store-admin
  type: LoadBalancer # Expose service externally via load balancer
---
# Deployment for AI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: ai-service
          image: serpild/ai-service:latest
          ports:
            - containerPort: 5001
          env:
            - name: USE_AZURE_OPENAI # set to True for Azure OpenAI, False for Public OpenAI
              value: "True"
            - name: AZURE_OPENAI_API_VERSION
              value: "2024-07-01-preview"
            - name: AZURE_OPENAI_DEPLOYMENT_NAME # required if using Azure OpenAI
              value: "gpt-4"
            - name: AZURE_OPENAI_ENDPOINT # required if using Azure OpenAI
              value: "https://bestbuyopenai.openai.azure.com/"
            - name: AZURE_OPENAI_DALLE_ENDPOINT
              value: "https://bestbuyopenai.openai.azure.com/"
            - name: AZURE_OPENAI_DALLE_DEPLOYMENT_NAME
              value: "dall-e-3"
            - name: OPENAI_API_KEY # always required
              valueFrom:
                secretKeyRef:
                  name: openai-api-secret
                  key: OPENAI_API_KEY
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
---
# Service for AI Service
apiVersion: v1
kind: Service
metadata:
  name: ai-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5001
      targetPort: 5001
  selector:
    app: ai-service

